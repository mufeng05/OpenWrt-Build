name: Build OpenWrt PCDN-TEST
on:
  repository_dispatch:
  workflow_dispatch:

env:
  DEVICE_NAME:
  DATE:
  FIRMWARE:
  PRODUCT_NAME: PCDN-TEST
  KERNEL_MAJOR: "6.12"
  KERNEL_VERSION:
  OPENWRT_REPO: namiltd/openwrt
  OPENWRT_REF: 6.12
  OPENWRT_SHA:
  TAG:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v4
    

    - name: Check server configuration
      run: |
        echo "-------------------------------CPU信息-------------------------------------------"
        echo
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo "CPU核心及版本信息:$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c)"
        echo
        echo "-------------------------------内存信息-------------------------------------------"
        echo
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo
        echo "-------------------------------硬盘信息--------------------------------------------"
        echo
        echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)"
        echo "硬盘详情："
        df -Th
      
    - name: Initialization environment
      run: |
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo apt update
        sudo apt install -y build-essential clang flex bison g++ gawk \
        gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
        python3-setuptools rsync swig unzip zlib1g-dev file wget
        DATE=$(date "+%Y%m%d_%H%M%S")
        echo "DATE=$DATE" >> $GITHUB_ENV
        DEVICE_NAME_FILE="DEVICE_NAME"
        grep '^CONFIG_TARGET.*DEVICE.*=y' config/${{ env.PRODUCT_NAME }}.config | sed -r 's/.*CONFIG_TARGET_(.*)_DEVICE.*/\1/' > "$DEVICE_NAME_FILE"
        if [ -s "$DEVICE_NAME_FILE" ]; then
            DEVICE_NAME=$(cat "$DEVICE_NAME_FILE")
            echo "DEVICE_NAME=$DEVICE_NAME" >> $GITHUB_ENV
        fi
        echo "TAG=OpenWrt-${{ env.PRODUCT_NAME }}_${DEVICE_NAME}_${DATE}" >> $GITHUB_ENV
        echo "OPENWRT_SHA=$(curl https://api.github.com/repos/${OPENWRT_REPO}/commits/${OPENWRT_REF} | jq -r .sha)" >> $GITHUB_ENV
        df -Th

    - name: Clone source code
      uses: actions/checkout@v4
      with:
        repository: ${{ env.OPENWRT_REPO }}
        path: openwrt
        ref: ${{ env.OPENWRT_SHA }}

    - name: Get kernel version
      run: |
        KERNEL_MINOR=$(awk -F ' = ' -v major="$KERNEL_MAJOR" '$1 == "LINUX_VERSION-" major {print $2}' openwrt/target/linux/generic/kernel-$KERNEL_MAJOR)
        KERNEL_VERSION="$KERNEL_MAJOR$KERNEL_MINOR"
        echo "KERNEL_VERSION=$KERNEL_VERSION" >> $GITHUB_ENV


    - name: Update and install feeds
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: Add Turbo ACC
      run: |
        cd openwrt
        curl -sSL https://raw.githubusercontent.com/mufeng05/turboacc/luci/add_turboacc.sh -o add_turboacc.sh && bash add_turboacc.sh --no-sfe

    - name: Add Argon Theme
      uses: actions/checkout@v4
      with:
        repository: jerrykuku/luci-theme-argon
        path: openwrt/package/luci-theme-argon

    - name: Set Connection Tracking Limit
      run: |
        echo "net.netfilter.nf_conntrack_max=128000" >> ./openwrt/package/kernel/linux/files/sysctl-nf-conntrack.conf
      
    - name: Patch r8168
      run: cp patches/010-enable_TX_RSS_disable_ASPM.patch.patch openwrt/package/kernel/r8168/patches/

    - name: Load custom configuration
      run: cp config/${{ env.PRODUCT_NAME }}.config openwrt/.config

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=s
    
    - name: Upload bin directory
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt-${{ env.PRODUCT_NAME }}_bin_${{ env.DEVICE_NAME }}_${{ env.DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      run: |
        cd $GITHUB_WORKSPACE/openwrt/bin/packages
        tar -zcvf Packages.tar.gz ./*
        cp Packages.tar.gz $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        cd $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt-${{ env.PRODUCT_NAME }}_firmware_${{ env.DEVICE_NAME }}_${{ env.DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Hash images
      run: |
        for f in ${{ env.FIRMWARE }}/*.img; do
          sha256sum "$f" | tee -a sha256sum
        done

    - name: Generate release informations
      run: |
        cat <<EOF | sed -E 's/^  //' | tee Release.md
          # Sources

          OpenWrt: [${OPENWRT_REPO}@${OPENWRT_REF}](https://github.com/${OPENWRT_REPO}/tree/${OPENWRT_REF}) ([\`${OPENWRT_SHA}\`](https://github.com/${OPENWRT_REPO}/tree/${OPENWRT_SHA}))

          # Kernel Version
 
          ${{ env.KERNEL_VERSION }}
 
          # SHA256

          $(awk '{gsub(".*/", "", $2); printf "%s: `%s`\n", $2, $1}' sha256sum)
        EOF

    - name: Create release
      id: release
      uses: ncipollo/release-action@main
      with:
        tag: ${{ env.TAG }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE }}/*
        bodyFile: Release.md
