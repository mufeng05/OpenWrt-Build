name: Build OpenWrt BE

on:
  repository_dispatch:
  workflow_dispatch:

env:
  DEVICE_NAME: Unkonwn
  DATE: Unkonwn
  FIRMWARE: Unkonwn

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Check server configuration
      run: |
        echo "-------------------------------CPU信息-------------------------------------------"
        echo
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo "CPU核心及版本信息:$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c)"
        echo
        echo "-------------------------------内存信息-------------------------------------------"
        echo
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo
        echo "-------------------------------硬盘信息--------------------------------------------"
        echo
        echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)"
        echo "硬盘详情："
        df -Th
      
    - name: Initialization environment
      run: |
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo rm -rf /etc/apt/sources.list.d /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php 2>/dev/null
        sudo -E apt -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo -E apt update -y
        sudo -E apt full-upgrade -y
        sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
        libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libncurses-dev libpython3-dev libreadline-dev \
        libssl-dev libtool llvm lrzsz genisoimage msmtp ninja-build p7zip p7zip-full patch pkgconf python3 \
        python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
        uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt -y autoremove --purge
        sudo -E systemctl daemon-reload
        sudo -E apt clean && sudo -E apt autoclean

    - name: Clone source code
      run: |
        df -Th
        git clone https://github.com/openwrt/openwrt.git
        echo "DATE=$(date "+%Y%m%d_%H%M%S")" >> $GITHUB_ENV

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a
      
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Add Argon Theme
      run: |
        cd openwrt/package
        git clone https://github.com/jerrykuku/luci-theme-argon.git
    
    - name: Load custom configuration
      run: mv config/BE.config openwrt/.config

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*CONFIG_TARGET_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
    
    - name: Upload bin directory
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt-BE_bin_${{ env.DEVICE_NAME }}_${{ env.DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      run: |
        cd $GITHUB_WORKSPACE/openwrt/bin/packages
        tar -zcvf Packages.tar.gz ./*
        cp Packages.tar.gz $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        cd $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt-BE_firmware_${{ env.DEVICE_NAME }}_${{ env.DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Create release
      id: release
      uses: ncipollo/release-action@main
      with:
        tag: OpenWrt-BE_${{ env.DEVICE_NAME }}_${{ env.DATE }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE }}/*
